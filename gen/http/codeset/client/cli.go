// Code generated by goa v3.3.1, DO NOT EDIT.
//
// codeset HTTP client CLI support package
//
// Command:
// $ goa gen github.com/fuseml/fuseml-core/design

package client

import (
	"encoding/json"
	"fmt"

	codeset "github.com/fuseml/fuseml-core/gen/codeset"
	goa "goa.design/goa/v3/pkg"
)

// BuildListPayload builds the payload for the codeset list endpoint from CLI
// flags.
func BuildListPayload(codesetListProject string, codesetListLabel string) (*codeset.ListPayload, error) {
	var project *string
	{
		if codesetListProject != "" {
			project = &codesetListProject
		}
	}
	var label *string
	{
		if codesetListLabel != "" {
			label = &codesetListLabel
		}
	}
	v := &codeset.ListPayload{}
	v.Project = project
	v.Label = label

	return v, nil
}

// BuildRegisterPayload builds the payload for the codeset register endpoint
// from CLI flags.
func BuildRegisterPayload(codesetRegisterBody string, codesetRegisterLocation string) (*codeset.RegisterPayload, error) {
	var err error
	var body RegisterRequestBody
	{
		err = json.Unmarshal([]byte(codesetRegisterBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"codeset\": {\n         \"description\": \"My first MLFlow application with FuseML\",\n         \"labels\": [\n            \"mlflow\",\n            \"playground\"\n         ],\n         \"name\": \"mlflow-app-01\",\n         \"project\": \"mlflow-project-01\",\n         \"url\": \"http://my-gitea.server/project/repository.git\"\n      }\n   }'")
		}
		if body.Codeset == nil {
			err = goa.MergeErrors(err, goa.MissingFieldError("codeset", "body"))
		}
		if err != nil {
			return nil, err
		}
	}
	var location string
	{
		location = codesetRegisterLocation
	}
	v := &codeset.RegisterPayload{}
	if body.Codeset != nil {
		v.Codeset = marshalCodesetRequestBodyToCodesetCodeset(body.Codeset)
	}
	v.Location = location

	return v, nil
}

// BuildGetPayload builds the payload for the codeset get endpoint from CLI
// flags.
func BuildGetPayload(codesetGetProject string, codesetGetName string) (*codeset.GetPayload, error) {
	var project string
	{
		project = codesetGetProject
	}
	var name string
	{
		name = codesetGetName
	}
	v := &codeset.GetPayload{}
	v.Project = project
	v.Name = name

	return v, nil
}
