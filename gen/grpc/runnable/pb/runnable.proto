// Code generated with goa v3.3.1, DO NOT EDIT.
//
// runnable protocol buffer definition
//
// Command:
// $ goa gen github.com/fuseml/fuseml-core/design

syntax = "proto3";

package runnable;

option go_package = "/runnablepb";

// The runable service performs operations on runnables.
service Runnable {
	// Retrieve information about runnables registered in FuseML.
	rpc List (ListRequest) returns (ListResponse);
	// Register a runnable with the FuseML runnable store.
	rpc Register (RegisterRequest) returns (RegisterResponse);
	// Retrieve an Runnable from FuseML.
	rpc Get (GetRequest) returns (GetResponse);
}

message ListRequest {
	// The kind of runnables to list
	string kind = 1;
}

message ListResponse {
	repeated Runnable2 field = 1;
}

message Runnable2 {
	// The ID of the runnable
	string id = 1;
	// The name of the runnable
	string name = 2;
	// The kind of runnable (builder, trainer, predictor etc.)
	string kind = 3;
	// The OCI container image associated with the runnable
	RunnableImage image = 4;
	// List of inputs (artifacts, values etc.) accepted by this runnable
	repeated RunnableInput inputs = 5;
	// List of outputs (artifacts, values etc.) generated by this runnable
	repeated RunnableOutput outputs = 6;
	// The runnable's creation time
	string created = 7;
	// Labels associated with the runnable
	repeated string labels = 8;
}

message RunnableImage {
	// The URL for the external registry where the image is stored (empty for
// internal images)
	string registry_url = 1;
	// The image repository
	string repository = 2;
	// The image tag
	string tag = 3;
}

message RunnableInput {
	// Input name
	string name = 1;
	// Kind of input (e.g. runnable, dataset, model, parameter, etc.)
	string kind = 2;
	// Runnable reference
	RunnableRef runnable = 3;
	// Parameter description
	InputParameter parameter = 4;
}

message RunnableRef {
	// Runnable name
	string name = 1;
	// Runnable kind
	string kind = 2;
	// Runnable labels
	repeated string labels = 3;
}

message InputParameter {
	// Parameter data type
	string datatype = 1;
	// Optional parameter
	bool optional = 2;
	// Default value
	string default = 3;
}

message RunnableOutput {
	// Output name
	string name = 1;
	// Kind of output (e.g. runnable, dataset, model, metatada, etc.)
	string kind = 2;
	// Runnable reference
	RunnableRef runnable = 3;
	// Metadata description
	InputParameter metadata = 4;
}

message RegisterRequest {
	// The ID of the runnable
	string id = 1;
	// The name of the runnable
	string name = 2;
	// The kind of runnable (builder, trainer, predictor etc.)
	string kind = 3;
	// The OCI container image associated with the runnable
	RunnableImage image = 4;
	// List of inputs (artifacts, values etc.) accepted by this runnable
	repeated RunnableInput inputs = 5;
	// List of outputs (artifacts, values etc.) generated by this runnable
	repeated RunnableOutput outputs = 6;
	// The runnable's creation time
	string created = 7;
	// Labels associated with the runnable
	repeated string labels = 8;
}

message RegisterResponse {
	// The ID of the runnable
	string id = 1;
	// The name of the runnable
	string name = 2;
	// The kind of runnable (builder, trainer, predictor etc.)
	string kind = 3;
	// The OCI container image associated with the runnable
	RunnableImage image = 4;
	// List of inputs (artifacts, values etc.) accepted by this runnable
	repeated RunnableInput inputs = 5;
	// List of outputs (artifacts, values etc.) generated by this runnable
	repeated RunnableOutput outputs = 6;
	// The runnable's creation time
	string created = 7;
	// Labels associated with the runnable
	repeated string labels = 8;
}

message GetRequest {
	// Runnable name or id
	string runnable_name_or_id = 1;
}

message GetResponse {
	// The ID of the runnable
	string id = 1;
	// The name of the runnable
	string name = 2;
	// The kind of runnable (builder, trainer, predictor etc.)
	string kind = 3;
	// The OCI container image associated with the runnable
	RunnableImage image = 4;
	// List of inputs (artifacts, values etc.) accepted by this runnable
	repeated RunnableInput inputs = 5;
	// List of outputs (artifacts, values etc.) generated by this runnable
	repeated RunnableOutput outputs = 6;
	// The runnable's creation time
	string created = 7;
	// Labels associated with the runnable
	repeated string labels = 8;
}
