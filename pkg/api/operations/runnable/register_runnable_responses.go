// Code generated by go-swagger; DO NOT EDIT.

package runnable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/fuseml/fuseml/core/pkg/models"
)

// RegisterRunnableCreatedCode is the HTTP code returned for type RegisterRunnableCreated
const RegisterRunnableCreatedCode int = 201

/*RegisterRunnableCreated Runnable registered

swagger:response registerRunnableCreated
*/
type RegisterRunnableCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Runnable `json:"body,omitempty"`
}

// NewRegisterRunnableCreated creates RegisterRunnableCreated with default headers values
func NewRegisterRunnableCreated() *RegisterRunnableCreated {

	return &RegisterRunnableCreated{}
}

// WithPayload adds the payload to the register runnable created response
func (o *RegisterRunnableCreated) WithPayload(payload *models.Runnable) *RegisterRunnableCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register runnable created response
func (o *RegisterRunnableCreated) SetPayload(payload *models.Runnable) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterRunnableCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterRunnableBadRequestCode is the HTTP code returned for type RegisterRunnableBadRequest
const RegisterRunnableBadRequestCode int = 400

/*RegisterRunnableBadRequest Bad Request

swagger:response registerRunnableBadRequest
*/
type RegisterRunnableBadRequest struct {
}

// NewRegisterRunnableBadRequest creates RegisterRunnableBadRequest with default headers values
func NewRegisterRunnableBadRequest() *RegisterRunnableBadRequest {

	return &RegisterRunnableBadRequest{}
}

// WriteResponse to the client
func (o *RegisterRunnableBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
